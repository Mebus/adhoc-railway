<?xml version="1.0" encoding="UTF-8"?>
<project name="AdHoc-Railway" default="compile" basedir=".">
  <!-- build-specific properties -->
  <property file="${user.home}/.ant.properties"/>
  <property file="build.properties"/>
  <!-- set global properties for this build -->
  <property name="src.dir" value="src"/>
  <property name="build.dir" value="build"/>
  <property name="javadoc.dir" value="javadoc"/>
  <property name="release.dir" value="release/"/>
  <property environment="env"/>
  <!-- main class for run target -->
  <property name="main.class" value="ch.fork.AdHocRailway.ui.AdHocRailway"/>

  <!-- =================================================================== -->
  <!-- Class paths                                                         -->
  <!-- =================================================================== -->
  <path id="compile.class.path">
    <pathelement location="lib/xercesImpl.jar"/>
    <pathelement location="lib/jsrcpc-bin.jar"/>
  </path>
  <path id="run.class.path">
    <pathelement location="${build.dir}"/>
    <pathelement location="lib/jsrcpc-bin.jar"/>
  </path>
  <path id="javadoc.src.path">
    <pathelement location="./src/"/>
  </path>
  <!-- =================================================================== -->
  <!-- Init targets                                                        -->
  <!-- =================================================================== -->
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build.dir}"/>
  </target>
  <!-- =================================================================== -->
  <!-- CopyImages                                                          -->
  <!-- =================================================================== -->
  <target name="copy_images" depends="init">
    <copy todir="${build.dir}">
      <fileset dir="./src">
        <include name="**/*.png"/>
      </fileset>
    </copy>
  </target>
  <!-- =================================================================== -->
  <!-- Compile: Default                                                    -->
  <!-- =================================================================== -->
  <target name="compile" depends="copy_images" description="Compiles all Java sources">
    <javac destdir="${build.dir}" classpathref="compile.class.path" deprecation="off">
      <src path="${src.dir}"/>
      <include name="**/*.java"/>
      <include name="**/*.png"/>
    </javac>
  </target>
  <!-- =================================================================== -->
  <!-- Run and Run-tests targets                                           -->
  <!-- =================================================================== -->
  <target name="run" depends="init, compile" description="runs the examples" >
    <java classname="${main.class}" fork="yes" classpathref="run.class.path"/>
  </target>
  <!-- =================================================================== -->
  <!-- RELEASE                                                             -->
  <!-- =================================================================== -->
  <target name="makerelease" description="Generates a release">
    <antcall target="javadoc"/>
    <antcall target="bin"/>
    <antcall target="src"/>
  </target>

  <!-- =================================================================== -->
  <!-- Documentation                                                       -->
  <!-- =================================================================== -->
  <target name="javadoc" description="Generate JavaDoc HTML pages" depends="init">
    <mkdir dir="${javadoc.dir}"/>
    <javadoc sourcepath="${src.dir}" packagenames="*" classpath="./lib/jsrcpc-bin.jar" destdir="${javadoc.dir}" author="true" use="true" verbose="false" package="true">
    </javadoc>
  </target>
  <!-- =================================================================== -->
  <!-- Jar targets                                                         -->
  <!-- =================================================================== -->
  <target name="bin" depends="compile" description="Builds the ZIP file containing all stuff">
    <mkdir dir="${release.dir}"/>
    <unjar src="./lib/jsrcpc-bin.jar" dest="${build.dir}"/>
    <delete file="AdHoc-Railway-${release}-bin.jar"/>
    <jar destfile="AdHoc-Railway-${release}-bin.jar" manifest="./src/manifest.mf">
      <fileset dir="${build.dir}/"
        includes="**/*.class"
        />
      <fileset dir="${build.dir}/"
        includes="**/*.png"
        />
      <fileset dir="${build.dir}/"
        includes="**/*.properties"
        />
    </jar>
  </target>
  <!-- =================================================================== -->
  <!-- Zip targets                                                         -->
  <!-- =================================================================== -->
  <target name="src" depends="" description="Builds the ZIP file containing all stuff">
    <mkdir dir="AdHoc-Railway-${release}-src"/>
    <exec dir="." executable="update_changelog">
      <env key="PATH" path="./utils:${env.PATH}"/>
      <arg value="https://svn.sourceforge.net/svnroot/adhocrailway/trunk"/>
    </exec>
    <copy todir="AdHoc-Railway-${release}-src">
      <fileset dir="." includes="ChangeLog, README, COPYING, TODO, build.xml,
        build.properties" excludes="**/.svn/"/>
      <fileset dir="." includes="src/" excludes="**/.svn/"/>
      <!--fileset dir="." includes="doc/" excludes="**/.svn/"/-->
      <!--fileset dir="." includes="javadoc/" excludes="**/.svn/"/-->
      <fileset dir="." includes="etc/" excludes="**/.svn/"/>
      <fileset dir="." includes="lib/" excludes="**/.svn/"/>
    </copy>
    <tar destfile="AdHoc-Railway-${release}-src.tar.bz2"
      basedir="" includes="AdHoc-Railway-${release}-src/**" compression="bzip2" longfile="gnu" excludes="**/.svn/"/>
    <delete dir="AdHoc-Railway-${release}-src"/>
    <delete file="ChangeLog"/>
  </target>
  <!-- =================================================================== -->
  <!-- Clean targets                                                       -->
  <!-- =================================================================== -->
  <target name="clean" description="Removes generated class files">
    <!-- Delete the ${build.dir} directory tree -->
    <delete dir="${build.dir}"/>
  </target>
  <target name="clean-javadoc" description="Removes generated Javadoc files">
    <delete dir="${javadoc.dir}"/>
  </target>
  <target name="clean-all" depends="clean, clean-javadoc" description="Removes all generated artifacts">
  </target>
</project>

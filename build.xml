<?xml version="1.0" encoding="UTF-8"?>
<project name="AdHoc-Railway" default="compile" basedir=".">
	<!-- build-specific properties -->
	<property file="${user.home}/.ant.properties"/>
	<property file="build.properties"/>
	<!-- set global properties for this build -->
	<property name="etc.dir" value="etc"/>
	<property name="src.dir" value="src"/>
	<property name="lib.dir" value="lib"/>
	<property name="db.dir" value="db"/>
	<property name="samples.dir" value="samples"/>
	<property name="build.dir" value="build"/>
	<property name="javadoc.dir" value="javadoc"/>
	<property name="release.dir" value="release/"/>
	<property environment="env"/>
	<!-- main class for run target -->
	
	<!--property name="main.class" value="ch.fork.AdHocRailway.ui.AdHocRailway"/-->
	<property name="main.class" value="ch.fork.AdHocRailway.ui.AdHocRailway"/>
	<!-- Useful shortcuts -->
	<patternset id="meta.files">
		<include name="**/*.xml"/>
		<include name="**/*.properties"/>
	</patternset>
	
	<!-- =================================================================== -->
	<!-- Class paths                                                         -->
	<!-- =================================================================== -->
	<path id="compile.class.path">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
			<include name="**/*.zip"/>
		</fileset>
	</path>
	<path id="run.class.path">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
			<include name="**/*.zip"/>
		</fileset>
	</path>
	<path id="javadoc.src.path">
		<pathelement location="./src/"/>
	</path>
	<!-- =================================================================== -->
	<!-- Init targets                                                        -->
	<!-- =================================================================== -->
	<target name="init">
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build.dir}"/>
	</target>
	<!-- =================================================================== -->
	<!-- CopyImages                                                          -->
	<!-- =================================================================== -->
	<target name="copy_images" depends="init">
		<copy todir="${build.dir}">
			<fileset dir="./res">
				<include name="**/*.png"/>
			</fileset>
		</copy>
	</target>
	
	<!-- =================================================================== -->
	<!-- Compile: Default                                                    -->
	<!-- =================================================================== -->
	<target name="compile" depends="copy_images"
		description="Compiles all Java sources">
		<javac destdir="${build.dir}" classpathref="compile.class.path"
			deprecation="off">
			<src path="${src.dir}"/>
			<include name="**/*.java"/>
		</javac>
	</target>
	<!-- =================================================================== -->
	<!-- Run and Run-tests targets                                           -->
	<!-- =================================================================== -->
	<target name="run" depends="init, compile" description="runs the examples">
		<java classname="${main.class}" fork="yes" classpathref="run.class.path">
			<classpath path="${build.dir}"/>
		</java>
	</target>
	<!-- =================================================================== -->
	<!-- RELEASE                                                             -->
	<!-- =================================================================== -->
	<target name="makerelease" description="Generates a release">
		<antcall target="bin"/>
		<antcall target="src"/>
	</target>
	
	<!-- =================================================================== -->
	<!-- Documentation                                                       -->
	<!-- =================================================================== -->
	<target name="javadoc" description="Generate JavaDoc HTML pages"
		depends="init">
		<mkdir dir="${javadoc.dir}"/>
		<javadoc sourcepath="${src.dir}" packagenames="*"
			classpathref="compile.class.path"  destdir="${javadoc.dir}"
			author="true" use="true" verbose="false" package="true">
		</javadoc>
	</target>
	<!-- =================================================================== -->
	<!-- Jar targets                                                         -->
	<!-- =================================================================== -->
	<target name="jar" depends="compile"
		description="Builds a JAR file">
		<delete file="AdHoc-Railway-${release}.jar"/>
		<jar destfile="AdHoc-Railway-${release}.jar"
			manifest="./src/manifest.mf">
			<fileset dir="${build.dir}/" includes="**/*.class"/>
			<fileset dir="${build.dir}/" includes="**/*.png"/>
			<metainf dir="${etc.dir}/META-INF" includes="*"/>
		</jar>
	</target>
	
	<!-- =================================================================== -->
	<!-- Zip targets                                                         -->
	<!-- =================================================================== -->
	<target name="bin" depends="clean-all, jar"
		description="Builds the ZIP file containing all stuff">
		<property name="bindir" value="${release.dir}/AdHoc-Railway-${release}-bin"/>
		<delete file="AdHoc-Railway-${release}-bin.zip"/>
		<mkdir dir=""/>
		<copy todir="${bindir}">
			<fileset dir="."
				includes="ChangeLog, README, COPYING, TODO"
				excludes="**/.svn/"/>
		</copy>
		<copy todir="${bindir}">
			<fileset dir="">
				<filename name="AdHoc-Railway-${release}.jar" />
			</fileset>
		</copy>
		<copy todir="${bindir}/${lib.dir}">
			<fileset dir="${lib.dir}"  excludes="**/.svn/"/>
		</copy>
		<copy todir="${bindir}/${etc.dir}">
			<fileset dir="${etc.dir}"  excludes="**/.svn/"/>
		</copy>
		<copy todir="${bindir}/${samples.dir}">
			<fileset dir="${samples.dir}"  excludes="**/.svn/"/>
		</copy>
		<copy todir="${bindir}/${db.dir}">
			<fileset dir="${db.dir}"  excludes="**/.svn/"/>
		</copy>
		<tar destfile="AdHoc-Railway-${release}-bin.tar.bz2" basedir="${release.dir}"
      compression="bzip2"
			/>
		<zip destfile="AdHoc-Railway-${release}-bin.zip" basedir="${release.dir}"/>
		
		<delete file="ChangeLog"/>
	</target>
	
	<target name="src" depends="clean-all, javadoc"
		description="Builds the ZIP file containing all stuff">
		<property name="srcdir" value="${release.dir}/AdHoc-Railway-${release}-src"/>
		<delete file="AdHoc-Railway-${release}-src.zip"/>
		
		<copy todir="${srcdir}">
			<fileset dir="."
				includes="ChangeLog, README, COPYING, TODO, build.xml,
        build.properties"
				excludes="**/.svn/"/>
		</copy>
		<!--copy todir="${srcdir}/${javadoc.dir}">
			<fileset dir="${javadoc.dir}"  excludes="**/.svn/"/>
		</copy-->
		<copy todir="${srcdir}/${lib.dir}">
			<fileset dir="${lib.dir}"  excludes="**/.svn/"/>
		</copy>
		<copy todir="${srcdir}/${src.dir}">
			<fileset dir="${src.dir}"  excludes="**/.svn/"/>
		</copy>
		<copy todir="${srcdir}/${etc.dir}">
			<fileset dir="${etc.dir}"  excludes="**/.svn/"/>
		</copy>
		<copy todir="${srcdir}/${samples.dir}">
			<fileset dir="${samples.dir}"  excludes="**/.svn/"/>
		</copy>
		<copy todir="${srcdir}/${db.dir}">
			<fileset dir="${db.dir}"  excludes="**/.svn/"/>
		</copy>
		<tar destfile="AdHoc-Railway-${release}-src.tar.bz2" basedir="${release.dir}"
      compression="bzip2"
			/>
		<zip destfile="AdHoc-Railway-${release}-src.zip" basedir="${release.dir}"
			/>
		<delete file="ChangeLog"/>
	</target>
	<!-- =================================================================== -->
	<!-- Clean targets                                                       -->
	<!-- =================================================================== -->
	<target name="clean" description="Removes generated class files">
		<delete dir="${build.dir}"/>
		<delete dir="${release.dir}"/>
	</target>
	<target name="clean-javadoc" description="Removes generated Javadoc files">
		<delete dir="${javadoc.dir}"/>
	</target>
	<target name="clean-all" depends="clean, clean-javadoc"
		description="Removes all generated artifacts">
	</target>	
</project>

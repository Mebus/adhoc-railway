/*------------------------------------------------------------------------
 * 
 * copyright : (C) 2008 by Benjamin Mueller 
 * email     : news@fork.ch
 * website   : http://sourceforge.net/projects/adhocrailway
 * version   : $Id: Preferences.java 151 2008-02-14 14:52:37Z fork_ch $
 * 
 *----------------------------------------------------------------------*/

/*------------------------------------------------------------------------
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 *----------------------------------------------------------------------*/

package ch.fork.AdHocRailway.services.impl.hibernate.turnouts;

// Generated 08-Aug-2007 18:10:44 by Hibernate Tools 3.2.0.beta8

import java.util.SortedSet;
import java.util.TreeSet;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Sort;
import org.hibernate.annotations.SortType;

/**
 * TurnoutGroup generated by hbm2java
 */
@Entity
@Table(name = "turnout_group", uniqueConstraints = {})
public class HibernateTurnoutGroup implements java.io.Serializable,
		Comparable<HibernateTurnoutGroup> {

	// Fields

	/**
	 * 
	 */
	private static final long serialVersionUID = -3726760465347384577L;

	@Id
	@GeneratedValue
	private int id;

	private String name;

	private int turnoutNumberOffset;

	private int turnoutNumberAmount;

	@Sort(type = SortType.NATURAL)
	private SortedSet<HibernateTurnout> turnouts = new TreeSet<HibernateTurnout>();

	public static final String PROPERTYNAME_ID = "id";
	public static final String PROPERTYNAME_NAME = "name";
	public static final String PROPERTYNAME_TURNOUT_NUMBER_OFFSET = "turnoutNumberOffset";
	public static final String PROPERTYNAME_TURNOUT_NUMBER_AMOUNT = "turnoutNumberAmount";

	@Override
	public int compareTo(final HibernateTurnoutGroup o) {
		if (this == o) {
			return 0;
		}
		if (o == null) {
			return -1;
		}
		// return name.compareTo(o.getName());
		if (id > o.getId()) {
			return 1;
		} else if (id < o.getId()) {
			return -1;
		} else {
			return 0;
		}
	}

	@Override
	public int hashCode() {
		final int PRIME = 31;
		int result = 1;
		// result = PRIME * result + id;
		result = PRIME * result + ((name == null) ? 0 : name.hashCode());
		return result;
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		final HibernateTurnoutGroup other = (HibernateTurnoutGroup) obj;
		if (name == null) {
			if (other.name != null) {
				return false;
			}
		} else if (!name.equals(other.name)) {
			return false;
		}
		return true;
	}

	@Override
	public String toString() {
		return name;
	}

	// Constructors

	/** default constructor */
	public HibernateTurnoutGroup() {
	}

	/** minimal constructor */
	public HibernateTurnoutGroup(final int id, final String name,
			final int turnoutNumberOffset, final int turnoutNumberAmount) {
		this.id = id;
		this.name = name;
		this.turnoutNumberOffset = turnoutNumberOffset;
		this.turnoutNumberAmount = turnoutNumberAmount;
	}

	/** full constructor */
	public HibernateTurnoutGroup(final int id, final String name,
			final int turnoutNumberOffset, final int turnoutNumberAmount,
			final SortedSet<HibernateTurnout> turnouts) {
		this.id = id;
		this.name = name;
		this.turnoutNumberOffset = turnoutNumberOffset;
		this.turnoutNumberAmount = turnoutNumberAmount;
		this.turnouts = turnouts;
	}

	// Property accessors

	@Id
	@GeneratedValue
	@Column(name = "id", unique = true, nullable = false, insertable = true, updatable = true)
	public int getId() {
		return this.id;
	}

	public void setId(final int id) {
		this.id = id;
	}

	@Column(name = "name", unique = false, nullable = false, insertable = true, updatable = true)
	public String getName() {
		return this.name;
	}

	public void setName(final String name) {
		this.name = name;
	}

	@Column(name = "turnout_number_offset", unique = false, nullable = false, insertable = true, updatable = true)
	public int getTurnoutNumberOffset() {
		return this.turnoutNumberOffset;
	}

	public void setTurnoutNumberOffset(final int turnoutNumberOffset) {
		this.turnoutNumberOffset = turnoutNumberOffset;
	}

	@Column(name = "turnout_number_amount", unique = false, nullable = false, insertable = true, updatable = true)
	public int getTurnoutNumberAmount() {
		return this.turnoutNumberAmount;
	}

	public void setTurnoutNumberAmount(final int turnoutNumberAmount) {
		this.turnoutNumberAmount = turnoutNumberAmount;
	}

	@Sort(type = SortType.NATURAL)
	@OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.EAGER, mappedBy = "turnoutGroup")
	public SortedSet<HibernateTurnout> getTurnouts() {
		if (turnouts == null) {
			turnouts = new TreeSet<HibernateTurnout>();
		}
		return this.turnouts;
	}

	@Sort(type = SortType.NATURAL)
	public void setTurnouts(final SortedSet<HibernateTurnout> turnouts) {
		this.turnouts = turnouts;
	}

}

/*------------------------------------------------------------------------
 * 
 * copyright : (C) 2008 by Benjamin Mueller 
 * email     : news@fork.ch
 * website   : http://sourceforge.net/projects/adhocrailway
 * version   : $Id: RouteItem.java 199 2012-01-14 23:46:24Z fork_ch $
 * 
 *----------------------------------------------------------------------*/

/*------------------------------------------------------------------------
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 *----------------------------------------------------------------------*/

package ch.fork.AdHocRailway.services.impl.hibernate.turnouts;

// Generated 08-Aug-2007 18:10:44 by Hibernate Tools 3.2.0.beta8

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * RouteItem generated by hbm2java
 */
@Entity
@Table(name = "route_item", uniqueConstraints = {})
public class HibernateRouteItem implements java.io.Serializable,
		Comparable<HibernateRouteItem> {

	// Fields

	/**
	 * 
	 */
	private static final long serialVersionUID = 6741140855056550629L;

	@Id
	@GeneratedValue
	private int id;

	private HibernateTurnout turnout;

	private HibernateRoute route;

	private String routedState;

	public static final String PROPERTYNAME_ID = "id";
	public static final String PROPERTYNAME_TURNOUT = "turnout";
	public static final String PROPERTYNAME_ROUTE = "route";
	public static final String PROPERTYNAME_ROUTED_STATE = "routedState";

	@Override
	public int compareTo(final HibernateRouteItem o) {
		if (this == o) {
			return 0;
		}
		if (o == null) {
			return -1;
		}
		return turnout.compareTo(o.getTurnout());
	}

	@Override
	public boolean equals(final Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}

		final HibernateRouteItem l = (HibernateRouteItem) o;
		if (id != l.getId()) {
			return false;
		}
		if (!turnout.equals(l.getTurnout())) {
			return false;
		}
		if (!routedState.equals(l.getRoutedState())) {
			return false;
		}
		return true;
	}

	@Override
	public int hashCode() {
		return turnout.hashCode() + routedState.hashCode();
	}

	@Override
	public String toString() {
		return turnout.toString() + ":" + routedState;
	}

	// Constructors

	/** default constructor */
	public HibernateRouteItem() {
	}

	/** full constructor */
	public HibernateRouteItem(final int id, final HibernateTurnout turnout,
			final HibernateRoute route, final String routedState) {
		this.id = id;
		this.turnout = turnout;
		this.route = route;
		this.routedState = routedState;
	}

	// Property accessors

	@Id
	@GeneratedValue
	@Column(name = "id", unique = true, nullable = true, insertable = true, updatable = true)
	public int getId() {
		return this.id;
	}

	public void setId(final int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "turnout_id", unique = false, nullable = false, insertable = true, updatable = true)
	public HibernateTurnout getTurnout() {
		return this.turnout;
	}

	public void setTurnout(final HibernateTurnout turnout) {
		this.turnout = turnout;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "route_id", unique = false, nullable = false, insertable = true, updatable = true)
	public HibernateRoute getRoute() {
		return this.route;
	}

	public void setRoute(final HibernateRoute route) {
		this.route = route;
	}

	@Column(name = "routed_state", unique = false, nullable = false, insertable = true, updatable = true, length = 9)
	public String getRoutedState() {
		return this.routedState;
	}

	public void setRoutedState(final String routedState) {
		this.routedState = routedState;
	}

}

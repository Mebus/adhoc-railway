package ch.fork.AdHocRailway.domain.locomotives;

// Generated 08-Aug-2007 18:10:44 by Hibernate Tools 3.2.0.beta8

import java.util.SortedSet;
import java.util.TreeSet;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Sort;
import org.hibernate.annotations.SortType;


/**
 * LocomotiveGroup generated by hbm2java
 */
@Entity
@Table(name = "locomotive_group", catalog = "adhocrailway", uniqueConstraints = {})
public class LocomotiveGroup implements java.io.Serializable, Comparable<LocomotiveGroup> {

	// Fields    

	private int id;

	private String name;

	@Sort(type = SortType.NATURAL)
	private SortedSet<Locomotive> locomotives = new TreeSet<Locomotive>();


	public int compareTo(LocomotiveGroup o) {
		if(this == o) return 0;
		if(o == null) return -1;
		return name.compareTo(o.getName());
	}
	
	public boolean equals(Object o) {
		if (this == o)
			return true;
		if (o == null || getClass() != o.getClass())
			return false;
		
		LocomotiveGroup g = (LocomotiveGroup)o;
		
		if(! name.equals(g.getName())) return false;
		return true;
	}
	
	public int hashCode() {
		return name.hashCode();
	}
	
	public String toString() {
		return name;
	}
	// Constructors

	/** default constructor */
	public LocomotiveGroup() {
	}

	/** minimal constructor */
	public LocomotiveGroup(int id, String name) {
		this.id = id;
		this.name = name;
	}

	/** full constructor */
	public LocomotiveGroup(int id, String name, SortedSet<Locomotive> locomotives) {
		this.id = id;
		this.name = name;
		this.locomotives = locomotives;
	}

	// Property accessors
	@Id
	@Column(name = "id", unique = true, nullable = false, insertable = true, updatable = true)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "name", unique = false, nullable = false, insertable = true, updatable = true)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Sort(type = SortType.NATURAL)
	@OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.EAGER, mappedBy = "locomotiveGroup")
	public SortedSet<Locomotive> getLocomotives() {
		return this.locomotives;
	}


	@Sort(type = SortType.NATURAL)
	public void setLocomotives(SortedSet<Locomotive> locomotives) {
		this.locomotives = locomotives;
	}

}

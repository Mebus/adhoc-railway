package ch.fork.AdHocRailway.domain.locomotives;

// Generated 08-Aug-2007 18:10:44 by Hibernate Tools 3.2.0.beta8

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import ch.fork.AdHocRailway.domain.ControlObject;
import de.dermoba.srcp.client.SRCPSession;
import de.dermoba.srcp.devices.GL;

/**
 * Locomotive generated by hbm2java
 */
@Entity
@Table(name = "locomotive", catalog = "adhocrailway", uniqueConstraints = {})
public class Locomotive implements java.io.Serializable, Comparable<Locomotive> {

	// Fields

	@Id @GeneratedValue
	private int id;

	private LocomotiveGroup locomotiveGroup;

	private LocomotiveType locomotiveType;

	private String name;

	private String description;

	private String image;

	private int address;

	private int bus;

	

	public int compareTo(Locomotive o) {
		if(this == o) return 0;
		if(o == null) return -1;
		return getName().compareTo(o.getName());
	}
	
	
	public String toString() {
		return name;
	}

	// Constructors

	/** default constructor */
	public Locomotive() {
	}

	/** full constructor */
	public Locomotive(int id, LocomotiveGroup locomotiveGroup,
			LocomotiveType locomotiveType, String name, String description,
			String image, int address, int bus) {
		this.id = id;
		this.locomotiveGroup = locomotiveGroup;
		this.locomotiveType = locomotiveType;
		this.name = name;
		this.description = description;
		this.image = image;
		this.address = address;
		this.bus = bus;
        
	}


	// Property accessors

	@Id @GeneratedValue
	@Column(name = "id", unique = true, nullable = false, insertable = true, updatable = true)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(cascade= { CascadeType.ALL }, fetch = FetchType.EAGER)
	@JoinColumn(name = "locomotive_group_id", unique = false, nullable = false, insertable = true, updatable = true)
	public LocomotiveGroup getLocomotiveGroup() {
		return this.locomotiveGroup;
	}

	public void setLocomotiveGroup(LocomotiveGroup locomotiveGroup) {
		this.locomotiveGroup = locomotiveGroup;
	}

	@ManyToOne(cascade= { CascadeType.ALL }, fetch = FetchType.EAGER)
	@JoinColumn(name = "locomotive_type_id", unique = false, nullable = false, insertable = true, updatable = true)
	public LocomotiveType getLocomotiveType() {
		return this.locomotiveType;
	}

	public void setLocomotiveType(LocomotiveType locomotiveType) {
		this.locomotiveType = locomotiveType;
	}

	@Column(name = "name", unique = false, nullable = false, insertable = true, updatable = true)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", unique = false, nullable = false, insertable = true, updatable = true)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "image", unique = false, nullable = false, insertable = true, updatable = true)
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@Column(name = "address", unique = false, nullable = false, insertable = true, updatable = true)
	public int getAddress() {
		return this.address;
	}

	public void setAddress(int address) {
		this.address = address;
	}

	@Column(name = "bus", unique = false, nullable = false, insertable = true, updatable = true)
	public int getBus() {
		return this.bus;
	}

	public void setBus(int bus) {
		this.bus = bus;
	}

	@Transient
	public int[] getAddresses() {
		return new int[] {address};
	}


	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + address;
		result = prime * result + bus;
		result = prime * result
				+ ((description == null) ? 0 : description.hashCode());
		result = prime * result + id;
		result = prime * result + ((image == null) ? 0 : image.hashCode());
		result = prime * result
				+ ((locomotiveGroup == null) ? 0 : locomotiveGroup.hashCode());
		result = prime * result
				+ ((locomotiveType == null) ? 0 : locomotiveType.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		return result;
	}


	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final Locomotive other = (Locomotive) obj;
		if (address != other.address)
			return false;
		if (bus != other.bus)
			return false;
		if (description == null) {
			if (other.description != null)
				return false;
		} else if (!description.equals(other.description))
			return false;
		if (id != other.id)
			return false;
		if (image == null) {
			if (other.image != null)
				return false;
		} else if (!image.equals(other.image))
			return false;
		if (locomotiveGroup == null) {
			if (other.locomotiveGroup != null)
				return false;
		} else if (!locomotiveGroup.equals(other.locomotiveGroup))
			return false;
		if (locomotiveType == null) {
			if (other.locomotiveType != null)
				return false;
		} else if (!locomotiveType.equals(other.locomotiveType))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		return true;
	}
	
	
}

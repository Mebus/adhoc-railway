package ch.fork.AdHocRailway.domain.turnouts;

// Generated 08-Aug-2007 18:10:44 by Hibernate Tools 3.2.0.beta8

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import ch.fork.AdHocRailway.domain.routes.RouteItem;

/**
 * Turnout generated by hbm2java
 */
@Entity
@Table(name = "turnout", catalog = "adhocrailway", uniqueConstraints = { @UniqueConstraint(columnNames = { "number" }) })
public class Turnout implements java.io.Serializable {

	// Fields    

	private int id;

	private TurnoutType turnoutType;

	private TurnoutGroup turnoutGroup;

	private int number;

	private String desc;

	private String defaultState;

	private String orientation;

	private Set<RouteItem> routeItems = new HashSet<RouteItem>(0);

	private Set<TurnoutAddress> turnoutAddresses = new HashSet<TurnoutAddress>(
			0);

	// Constructors

	/** default constructor */
	public Turnout() {
	}

	/** minimal constructor */
	public Turnout(int id, TurnoutType turnoutType, TurnoutGroup turnoutGroup,
			int number, String desc, String defaultState, String orientation) {
		this.id = id;
		this.turnoutType = turnoutType;
		this.turnoutGroup = turnoutGroup;
		this.number = number;
		this.desc = desc;
		this.defaultState = defaultState;
		this.orientation = orientation;
	}

	/** full constructor */
	public Turnout(int id, TurnoutType turnoutType, TurnoutGroup turnoutGroup,
			int number, String desc, String defaultState, String orientation,
			Set<RouteItem> routeItems, Set<TurnoutAddress> turnoutAddresses) {
		this.id = id;
		this.turnoutType = turnoutType;
		this.turnoutGroup = turnoutGroup;
		this.number = number;
		this.desc = desc;
		this.defaultState = defaultState;
		this.orientation = orientation;
		this.routeItems = routeItems;
		this.turnoutAddresses = turnoutAddresses;
	}

	// Property accessors
	@Id
	@Column(name = "id", unique = true, nullable = false, insertable = true, updatable = true)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn(name = "turnout_type_id", unique = false, nullable = false, insertable = true, updatable = true)
	public TurnoutType getTurnoutType() {
		return this.turnoutType;
	}

	public void setTurnoutType(TurnoutType turnoutType) {
		this.turnoutType = turnoutType;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn(name = "turnout_group_id", unique = false, nullable = false, insertable = true, updatable = true)
	public TurnoutGroup getTurnoutGroup() {
		return this.turnoutGroup;
	}

	public void setTurnoutGroup(TurnoutGroup turnoutGroup) {
		this.turnoutGroup = turnoutGroup;
	}

	@Column(name = "number", unique = true, nullable = false, insertable = true, updatable = true)
	public int getNumber() {
		return this.number;
	}

	public void setNumber(int number) {
		this.number = number;
	}

	@Column(name = "desc", unique = false, nullable = false, insertable = true, updatable = true)
	public String getDesc() {
		return this.desc;
	}

	public void setDesc(String desc) {
		this.desc = desc;
	}

	@Column(name = "default_state", unique = false, nullable = false, insertable = true, updatable = true, length = 9)
	public String getDefaultState() {
		return this.defaultState;
	}

	public void setDefaultState(String defaultState) {
		this.defaultState = defaultState;
	}

	@Column(name = "orientation", unique = false, nullable = false, insertable = true, updatable = true, length = 6)
	public String getOrientation() {
		return this.orientation;
	}

	public void setOrientation(String orientation) {
		this.orientation = orientation;
	}

	@OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "turnout")
	public Set<RouteItem> getRouteItems() {
		return this.routeItems;
	}

	public void setRouteItems(Set<RouteItem> routeItems) {
		this.routeItems = routeItems;
	}

	@OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "turnout")
	public Set<TurnoutAddress> getTurnoutAddresses() {
		return this.turnoutAddresses;
	}

	public void setTurnoutAddresses(Set<TurnoutAddress> turnoutAddresses) {
		this.turnoutAddresses = turnoutAddresses;
	}

}

package ch.fork.AdHocRailway.domain.routes;

// Generated 08-Aug-2007 18:10:44 by Hibernate Tools 3.2.0.beta8

import java.util.SortedSet;
import java.util.TreeSet;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Sort;
import org.hibernate.annotations.SortType;

import com.jgoodies.binding.beans.Model;

/**
 * RouteGroup generated by hbm2java
 */
@Entity
@Table(name = "route_group", catalog = "adhocrailway", uniqueConstraints = {})
public class RouteGroup extends Model implements java.io.Serializable,
		Comparable<RouteGroup> {

	// Fields

	@Id
	@GeneratedValue
	private int id;

	private String name;

	@Sort(type = SortType.NATURAL)
	private SortedSet<Route> routes = new TreeSet<Route>();
	
	public static final String PROPERTYNAME_ID = "id";
	public static final String PROPERTYNAME_NAME = "name";
	public static final String PROPERTYNAME_ROUTES = "routes";

	public int compareTo(RouteGroup o) {
		if (this == o)
			return 0;
		if (o == null)
			return -1;
		// if(weight > o.getWeight()) return 1;
		// if(weight == o.getWeight()) return 0;
		// if(weight < o.getWeight()) return -1;
		// return -1;
		return name.compareTo(o.getName());
	}

	public boolean equals(Object o) {
		if (this == o)
			return true;
		if (o == null || getClass() != o.getClass())
			return false;

		final RouteGroup l = (RouteGroup) o;
		if (id != l.getId())
			return false;
		if (!name.equals(l.getName()))
			return false;
		return true;
	}

	public int hashCode() {
		return name.hashCode();
	}

	public String toString() {
		return name;
	}

	// Constructors

	/** default constructor */
	public RouteGroup() {
	}

	/** minimal constructor */
	public RouteGroup(int id, String name) {
		this.id = id;
		this.name = name;
	}

	/** full constructor */
	public RouteGroup(int id, String name, SortedSet<Route> routes) {
		this.id = id;
		this.name = name;
		this.routes = routes;
	}

	// Property accessors

	@Id
	@GeneratedValue
	@Column(name = "id", unique = true, nullable = false, insertable = true, updatable = true)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		int old = id;
		this.id = id;
		firePropertyChange(PROPERTYNAME_ID, old, id);
	}

	@Column(name = "name", unique = false, nullable = false, insertable = true, updatable = true)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		String old = this.name;
		this.name = name;
		firePropertyChange(PROPERTYNAME_NAME, old, name);
	}

	@Sort(type = SortType.NATURAL)
	@OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "routeGroup")
	public SortedSet<Route> getRoutes() {
		return this.routes;
	}

	@Sort(type = SortType.NATURAL)
	public void setRoutes(SortedSet<Route> routes) {
		SortedSet<Route> old = routes;
		this.routes = routes;
		firePropertyChange(PROPERTYNAME_ROUTES, old, routes);
	}
}
